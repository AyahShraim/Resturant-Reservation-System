// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantReservation.Db;

#nullable disable

namespace RestaurantReservation.Db.Migrations
{
    [DbContext(typeof(RestaurantReservationDbContext))]
    partial class RestaurantReservationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "allan_emma@gmail.com",
                            FirstName = "Emma",
                            LastName = "Allan",
                            PhoneNumber = "+14304466390"
                        },
                        new
                        {
                            Id = 2,
                            Email = "arnold_jasmine@gmail.com",
                            FirstName = "Jasmine",
                            LastName = "Arnold",
                            PhoneNumber = "+14304466390"
                        },
                        new
                        {
                            Id = 3,
                            Email = "anderson_sophie@gmail.com",
                            FirstName = "Sophie",
                            LastName = "Anderson",
                            PhoneNumber = "+18704197636"
                        },
                        new
                        {
                            Id = 4,
                            Email = "ayah_shcameron_ryan@gmail.com",
                            FirstName = "Ryan",
                            LastName = "Cameron",
                            PhoneNumber = "+13106081534"
                        },
                        new
                        {
                            Id = 5,
                            Email = "lewis_william@gmail.com",
                            FirstName = "William",
                            LastName = "Lewis",
                            PhoneNumber = "+12205090941"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            Position = "Manager",
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Alice",
                            LastName = "Smith",
                            Position = "Waiter",
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Bob",
                            LastName = "Johnson",
                            Position = "Chef",
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Emily",
                            LastName = "Williams",
                            Position = "Cashier",
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Sophia",
                            LastName = "Jones",
                            Position = "Manager",
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Daniel",
                            LastName = "Miller",
                            Position = "Waiter",
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Olivia",
                            LastName = "Davis",
                            Position = "Waiter",
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Bella",
                            LastName = "Hamilton",
                            Position = "Chef",
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Emma",
                            LastName = "Rodriguez",
                            Position = "Manager",
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Michael",
                            LastName = "Brown",
                            Position = "Waiter",
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "James",
                            LastName = "Garcia",
                            Position = "Chef",
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Sophie",
                            LastName = "Taylor",
                            Position = "Manager",
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "William",
                            LastName = "Johnson",
                            Position = "Waiter",
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Peter",
                            LastName = "Ellison",
                            Position = "Chef",
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "Oliver",
                            LastName = "Smith",
                            Position = "Manager",
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Amelia",
                            LastName = "Brown",
                            Position = "Waiter",
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "Ethan",
                            LastName = "Davis",
                            Position = "Chef",
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "William",
                            LastName = "Davis",
                            Position = "Cashier",
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Ali",
                            LastName = "Clark",
                            Position = "Chef",
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Juicy beef patty with lettuce, tomato, and cheese",
                            Name = "Classic Burger",
                            Price = 8.99m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Golden fried chicken with mayo and pickles",
                            Name = "Crispy Chicken Sandwich",
                            Price = 9.99m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Grilled veggies wrapped in a tortilla with hummus",
                            Name = "Vegetarian Wrap",
                            Price = 7.99m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Assorted sushi rolls with soy sauce",
                            Name = "Sushi Combo",
                            Price = 15.99m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Crispy shrimp tempura with dipping sauce",
                            Name = "Tempura Shrimp",
                            Price = 12.99m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "Traditional Japanese soybean soup with tofu",
                            Name = "Miso Soup",
                            Price = 4.99m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Battered and fried chicken with sweet and sour sauce",
                            Name = "Sweet and Sour Chicken",
                            Price = 11.99m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 8,
                            Description = "Stir-fried beef with broccoli in a savory sauce",
                            Name = "Beef and Broccoli",
                            Price = 13.99m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 9,
                            Description = "Fried rice with shrimp, vegetables, and soy sauce",
                            Name = "Shrimp Fried Rice",
                            Price = 10.99m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 10,
                            Description = "Assorted seafood including shrimp, fish, and calamari",
                            Name = "Seafood Platter",
                            Price = 18.99m,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 11,
                            Description = "Spicy buffalo chicken wings with ranch dressing",
                            Name = "Chicken Wings",
                            Price = 9.99m,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 12,
                            Description = "Fresh salmon fillet grilled to perfection",
                            Name = "Grilled Salmon",
                            Price = 14.99m,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 13,
                            Description = "Classic pizza with tomato, mozzarella, and basil",
                            Name = "Margherita Pizza",
                            Price = 12.99m,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 14,
                            Description = "Creamy pasta with bacon, eggs, and parmesan cheese",
                            Name = "Pasta Carbonara",
                            Price = 15.99m,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 15,
                            Description = "Italian dessert with layers of coffee-soaked ladyfingers and mascarpone",
                            Name = "Tiramisu",
                            Price = 7.99m,
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 12, 30, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1191),
                            EmployeeId = 2,
                            ReservationId = 1,
                            TotalAmount = 37.96m
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 12, 31, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1205),
                            EmployeeId = 6,
                            ReservationId = 2,
                            TotalAmount = 33.97m
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 12, 28, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1212),
                            EmployeeId = 10,
                            ReservationId = 4,
                            TotalAmount = 68.94m
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 12, 30, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1219),
                            EmployeeId = 13,
                            ReservationId = 9,
                            TotalAmount = 87.94m
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2023, 12, 29, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1226),
                            EmployeeId = 16,
                            ReservationId = 11,
                            TotalAmount = 36.97m
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2023, 12, 30, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1234),
                            EmployeeId = 2,
                            ReservationId = 5,
                            TotalAmount = 33.96m
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2023, 12, 31, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1241),
                            EmployeeId = 7,
                            ReservationId = 3,
                            TotalAmount = 95.94m
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2023, 12, 27, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1248),
                            EmployeeId = 10,
                            ReservationId = 8,
                            TotalAmount = 110.91m
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2023, 12, 30, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1254),
                            EmployeeId = 13,
                            ReservationId = 9,
                            TotalAmount = 37.98m
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2023, 12, 30, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1263),
                            EmployeeId = 13,
                            ReservationId = 9,
                            TotalAmount = 39.97m
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2023, 12, 28, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1269),
                            EmployeeId = 10,
                            ReservationId = 4,
                            TotalAmount = 23.98m
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2023, 12, 28, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1275),
                            EmployeeId = 10,
                            ReservationId = 4,
                            TotalAmount = 13.99m
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateTime(2023, 12, 29, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1282),
                            EmployeeId = 16,
                            ReservationId = 11,
                            TotalAmount = 57.96m
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateTime(2023, 12, 29, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(1289),
                            EmployeeId = 16,
                            ReservationId = 11,
                            TotalAmount = 15.99m
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuItemId = 1,
                            OrderId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            MenuItemId = 2,
                            OrderId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            MenuItemId = 4,
                            OrderId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            MenuItemId = 5,
                            OrderId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            MenuItemId = 6,
                            OrderId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            MenuItemId = 7,
                            OrderId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 7,
                            MenuItemId = 9,
                            OrderId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 8,
                            MenuItemId = 10,
                            OrderId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 9,
                            MenuItemId = 11,
                            OrderId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 10,
                            MenuItemId = 12,
                            OrderId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 11,
                            MenuItemId = 13,
                            OrderId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 12,
                            MenuItemId = 14,
                            OrderId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 13,
                            MenuItemId = 15,
                            OrderId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 14,
                            MenuItemId = 1,
                            OrderId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 15,
                            MenuItemId = 3,
                            OrderId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 16,
                            MenuItemId = 4,
                            OrderId = 7,
                            Quantity = 6
                        },
                        new
                        {
                            Id = 17,
                            MenuItemId = 7,
                            OrderId = 8,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 18,
                            MenuItemId = 8,
                            OrderId = 8,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 19,
                            MenuItemId = 9,
                            OrderId = 8,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 20,
                            MenuItemId = 10,
                            OrderId = 9,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 21,
                            MenuItemId = 11,
                            OrderId = 10,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 22,
                            MenuItemId = 12,
                            OrderId = 10,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 23,
                            MenuItemId = 7,
                            OrderId = 11,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 24,
                            MenuItemId = 8,
                            OrderId = 12,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 25,
                            MenuItemId = 13,
                            OrderId = 13,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 26,
                            MenuItemId = 14,
                            OrderId = 13,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 27,
                            MenuItemId = 14,
                            OrderId = 14,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("TableId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 5,
                            Date = new DateTime(2023, 12, 30, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(636),
                            PartySize = 2,
                            RestaurantId = 1,
                            TableId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            Date = new DateTime(2023, 12, 31, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(715),
                            PartySize = 4,
                            RestaurantId = 2,
                            TableId = 7
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            Date = new DateTime(2023, 12, 31, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(722),
                            PartySize = 6,
                            RestaurantId = 2,
                            TableId = 10
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 3,
                            Date = new DateTime(2023, 12, 28, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(729),
                            PartySize = 8,
                            RestaurantId = 3,
                            TableId = 15
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 4,
                            Date = new DateTime(2023, 12, 30, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(736),
                            PartySize = 10,
                            RestaurantId = 1,
                            TableId = 5
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 5,
                            Date = new DateTime(2023, 12, 30, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(744),
                            PartySize = 8,
                            RestaurantId = 3,
                            TableId = 15
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 1,
                            Date = new DateTime(2023, 12, 30, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(750),
                            PartySize = 14,
                            RestaurantId = 3,
                            TableId = 13
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 2,
                            Date = new DateTime(2023, 12, 27, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(757),
                            PartySize = 2,
                            RestaurantId = 3,
                            TableId = 11
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 3,
                            Date = new DateTime(2023, 12, 29, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(763),
                            PartySize = 4,
                            RestaurantId = 4,
                            TableId = 18
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 1,
                            Date = new DateTime(2023, 12, 25, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(771),
                            PartySize = 20,
                            RestaurantId = 4,
                            TableId = 20
                        },
                        new
                        {
                            Id = 11,
                            CustomerId = 3,
                            Date = new DateTime(2023, 12, 29, 16, 49, 29, 425, DateTimeKind.Local).AddTicks(778),
                            PartySize = 6,
                            RestaurantId = 5,
                            TableId = 22
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "19 Old Fulton St., Brooklyn",
                            Name = "BURGER KING",
                            OpeningHours = "Saturday-Thursday: 10:00AM-5:00AM",
                            PhoneNumber = "+17185551234"
                        },
                        new
                        {
                            Id = 2,
                            Address = "123 Main St., Cityville",
                            Name = "ABC SUSHI",
                            OpeningHours = "Monday-Sunday: 11:00AM-8:00PM",
                            PhoneNumber = "+14304461234"
                        },
                        new
                        {
                            Id = 3,
                            Address = "456 Elm St., Townsville",
                            Name = "CHINESE KITCHEN",
                            OpeningHours = "Tuesday-Saturday: 12:30PM-9:00PM",
                            PhoneNumber = "+14304462345"
                        },
                        new
                        {
                            Id = 4,
                            Address = "789 Oak St., Villageton",
                            Name = "DASH SEAFOOD & CHICKEN",
                            OpeningHours = "Wednesday-Monday: 3:00PM-10:30PM",
                            PhoneNumber = "+14304463456"
                        },
                        new
                        {
                            Id = 5,
                            Address = "321 Maple St., Hamletville",
                            Name = "Patsy's Pizza",
                            OpeningHours = "Thursday-Tuesday: 4:00PM-11:00PM",
                            PhoneNumber = "+14304464567"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 2,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 4,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 6,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 8,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 10,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 2,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 4,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 4,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 4,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 8,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 11,
                            Capacity = 2,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 12,
                            Capacity = 10,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 13,
                            Capacity = 14,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 14,
                            Capacity = 4,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 15,
                            Capacity = 10,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 16,
                            Capacity = 2,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 17,
                            Capacity = 18,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 18,
                            Capacity = 4,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 19,
                            Capacity = 6,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 20,
                            Capacity = 20,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 21,
                            Capacity = 4,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 22,
                            Capacity = 6,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 23,
                            Capacity = 8,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 24,
                            Capacity = 10,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 25,
                            Capacity = 12,
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Views.EmployeesWithRestaurantDetails", b =>
                {
                    b.Property<string>("EmployeeFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RestaurantAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("EmployeesWithRestaurantDetails", (string)null);
                });

            modelBuilder.Entity("RestaurantReservation.Db.Views.ReservationDetails", b =>
                {
                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RestaurantAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("ReservationsDetails", (string)null);
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Employee", b =>
                {
                    b.HasOne("RestaurantReservation.Db.DataModels.Restaurant", "Restaurant")
                        .WithMany("Employees")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.MenuItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.DataModels.Restaurant", "Restaurant")
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Order", b =>
                {
                    b.HasOne("RestaurantReservation.Db.DataModels.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.DataModels.Reservation", "Reservation")
                        .WithMany("Orders")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.OrderItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.DataModels.MenuItem", "MenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.DataModels.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Reservation", b =>
                {
                    b.HasOne("RestaurantReservation.Db.DataModels.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.DataModels.Restaurant", "Restaurant")
                        .WithMany("Reservations")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.DataModels.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Table", b =>
                {
                    b.HasOne("RestaurantReservation.Db.DataModels.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.MenuItem", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Reservation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Restaurant", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("MenuItems");

                    b.Navigation("Reservations");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("RestaurantReservation.Db.DataModels.Table", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
